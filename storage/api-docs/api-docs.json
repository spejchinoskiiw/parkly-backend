{
    "openapi": "3.0.0",
    "info": {
        "title": "Parkly API Documentation",
        "description": "API documentation for Parkly backend",
        "contact": {
            "email": "stefan.pejchinoski@iwconnect.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://16.171.224.141/api",
            "description": "API Server"
        },
        {
            "url": "/"
        }
    ],
    "paths": {
        "/api/facilities": {
            "get": {
                "tags": [
                    "Facilities"
                ],
                "summary": "Get a list of all facilities",
                "description": "Display a listing of facilities.",
                "operationId": "11eafb078d1797dd2d2a2a8459ead7f9",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Downtown Parking"
                                                    },
                                                    "parking_spot_count": {
                                                        "type": "integer",
                                                        "example": 50
                                                    },
                                                    "manager_id": {
                                                        "type": "integer",
                                                        "example": 5,
                                                        "nullable": true
                                                    },
                                                    "manager": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Manager"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "manager@example.com"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Facilities"
                ],
                "summary": "Create a new facility",
                "description": "Store a newly created facility.",
                "operationId": "9a393251624df76dbe1b3b8e8ff4472d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "parking_spot_count"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "East Side Parking"
                                    },
                                    "parking_spot_count": {
                                        "type": "integer",
                                        "example": 25
                                    },
                                    "manager_id": {
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Facility created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "East Side Parking"
                                                },
                                                "parking_spot_count": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "manager_id": {
                                                    "type": "integer",
                                                    "example": 5,
                                                    "nullable": true
                                                },
                                                "manager": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Manager"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "manager@example.com"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/facilities/{id}": {
            "get": {
                "tags": [
                    "Facilities"
                ],
                "summary": "Get a specific facility by ID",
                "description": "Display the specified facility.",
                "operationId": "a99c52a70b744b844c7490a484e285c2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Facility ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Downtown Parking"
                                                },
                                                "parking_spot_count": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "manager_id": {
                                                    "type": "integer",
                                                    "example": 5,
                                                    "nullable": true
                                                },
                                                "manager": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Manager"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "manager@example.com"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Facility not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Facilities"
                ],
                "summary": "Update an existing facility",
                "description": "Update the specified facility.",
                "operationId": "ecba6e4cc84aa6e2d8b3f1bfe2dd46a2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Facility ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Facility Name"
                                    },
                                    "parking_spot_count": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "manager_id": {
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Facility updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Facility Name"
                                                },
                                                "parking_spot_count": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "manager_id": {
                                                    "type": "integer",
                                                    "example": 5,
                                                    "nullable": true
                                                },
                                                "manager": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 5
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Manager"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "manager@example.com"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Facility not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Facilities"
                ],
                "summary": "Delete a facility",
                "description": "Remove the specified facility.",
                "operationId": "b17ad3f3212fedccbe7dafef4363b973",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Facility ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facility deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Facility deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Facility not found"
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/parking-spots": {
            "get": {
                "tags": [
                    "Parking Spots"
                ],
                "summary": "Get a list of all parking spots",
                "description": "Display a listing of parking spots.",
                "operationId": "20ad82c7df831eb568326203b804a995",
                "parameters": [
                    {
                        "name": "facility_id",
                        "in": "query",
                        "description": "Filter spots by facility ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "facility_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "spot_number": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "facility": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Downtown Parking"
                                                            },
                                                            "parking_spot_count": {
                                                                "type": "integer",
                                                                "example": 50
                                                            },
                                                            "manager_id": {
                                                                "type": "integer",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "type": "object"
                                        },
                                        "meta": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Parking Spots"
                ],
                "summary": "Create a new parking spot",
                "description": "Store a newly created parking spot.",
                "operationId": "5c6d681ecd82664aa22fdc104e637d68",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "facility_id",
                                    "spot_number"
                                ],
                                "properties": {
                                    "facility_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "spot_number": {
                                        "type": "integer",
                                        "example": 6
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Parking spot created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 6
                                                },
                                                "facility_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "spot_number": {
                                                    "type": "integer",
                                                    "example": 6
                                                },
                                                "facility": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Downtown Parking"
                                                        },
                                                        "parking_spot_count": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "manager_id": {
                                                            "type": "integer",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "spot_number": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The spot number is already taken for this facility."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/parking-spots/{id}": {
            "get": {
                "tags": [
                    "Parking Spots"
                ],
                "summary": "Get a specific parking spot by ID",
                "description": "Display the specified parking spot.",
                "operationId": "eef84ebb8a4c80a61d84c8828dc5313a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parking Spot ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "facility_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "spot_number": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "facility": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Downtown Parking"
                                                        },
                                                        "parking_spot_count": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "manager_id": {
                                                            "type": "integer",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parking spot not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Parking Spots"
                ],
                "summary": "Update an existing parking spot",
                "description": "Update the specified parking spot.",
                "operationId": "55bf5537af2c4f53902a79709c38bd5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parking Spot ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "spot_number": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Parking spot updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "facility_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "spot_number": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "facility": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Downtown Parking"
                                                        },
                                                        "parking_spot_count": {
                                                            "type": "integer",
                                                            "example": 50
                                                        },
                                                        "manager_id": {
                                                            "type": "integer",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parking spot not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Parking Spots"
                ],
                "summary": "Delete a parking spot",
                "description": "Remove the specified parking spot.",
                "operationId": "82c7214b948631b10b72c8eb90d7c6f1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Parking Spot ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parking spot deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Parking spot deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parking spot not found"
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request OTP for login",
                "operationId": "c373bc4cffa4a56fc64e3979b8ee7b96",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@iwconnect.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification PIN has been sent to your email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Only @iwconnect.com email addresses are allowed."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify-pin": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP and get access token",
                "operationId": "73bafab387eabcd8f8db5515c511ceb6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "pin"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@iwconnect.com"
                                    },
                                    "pin": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "1|abcdef123456..."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@iwconnect.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "pin": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Invalid or expired PIN."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user and invalidate token",
                "operationId": "5ff2dc8b48bff52908d3821a0ecc9b3e",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "tags": [
        {
            "name": "Facilities",
            "description": "API Endpoints for managing parking facilities"
        },
        {
            "name": "Parking Spots",
            "description": "API Endpoints for managing parking spots within facilities"
        },
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ]
}